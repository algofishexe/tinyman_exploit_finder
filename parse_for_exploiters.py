import json
import requests
import time
from tinyman.v1.client import TinymanMainnetClient

client = TinymanMainnetClient()

# Fetch our two assets of interest
ID_A = 386192725
ID_B = 0
IDS = [ID_A, ID_B]
A = client.fetch_asset(ID_A)
B = client.fetch_asset(ID_B)

# Fetch the pool we will work with
pool = client.fetch_pool(A, B)
pool_address = pool.address
LIQUIDITY_ID = pool.liquidity_asset.id
# Start tracking txn groups
groups = {}

# Get first 1000 txns
BASE_URL = "https://mainnet-algorand.api.purestake.io/idx2/v2/accounts/{0}/transactions".format(pool_address)

header_file = open("header.json")
headers = json.load(header_file)
header_file.close()
r = requests.get(BASE_URL, headers=headers)
data = r.json()

while ("next-token" in data):
    print("First txn confirmed in round: #", data["transactions"][0]["confirmed-round"])
    for txn in data["transactions"]:
        if (not "group" in txn):
            continue
        txngroup = txn["group"]
        if txngroup in groups:
            if ("payment-transaction" in txn):
                if (txn["payment-transaction"]["amount"] > 3000): # get rid of txn fees
                    groups[txngroup].append(txn["payment-transaction"])
            elif ("asset-transfer-transaction" in txn):
                groups[txngroup].append(txn["asset-transfer-transaction"])
        else:
            if ("payment-transaction" in txn):
                if (txn["payment-transaction"]["amount"] > 3000): # get rid of txn fees
                    groups[txngroup] = [txn["payment-transaction"]]
            elif ("asset-transfer-transaction" in txn):
                groups[txngroup] = [txn["asset-transfer-transaction"]]

    for group in groups:
        liquidity = 0 # exactly 1 when removing liquidity
        asset_count = 0 # SHOULD BE EXACTLY 1 FOR ASSET/ALGO SWAP
        if len(groups[group]) == 3: # 3 txns: liquidity, asset, algo
            for txn in groups[group]:
                if ("asset-id" in txn):
                    if (txn["asset-id"] == LIQUIDITY_ID):
                        liquidity += 1
                    if (txn["asset-id"] in IDS):
                        asset_count += 1

        if (liquidity == 1 and asset_count != 1):
            print("EXPLOIT FOUND IN GROUP", group)

    time.sleep(1.5) # purestake sometimes gets mad with 1s timeout

    BASE_URL = "https://mainnet-algorand.api.purestake.io/idx2/v2/accounts/{0}/transactions?next={1}".format(pool_address, data["next-token"])
    r = requests.get(BASE_URL, headers=headers)
    data = r.json()
